ext.componentDescription = "Adoration Support Tool"

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

mainClassName="website.magyar.adoration.engine.AdorationApplication"

def configFileDefaultPath = "$project.projectDir/adoration.conf.properties";
if (!hasProperty("configFilePath")) {
    project.ext.configFilePath = configFileDefaultPath
}

run {
    args = ["$configFilePath"];
}

dependencies {
    implementation(group: 'org.slf4j', name: 'jcl-over-slf4j', version:'1.7.0')
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation project(':adoration-application:adoration-database')
    implementation project(':adoration-application:adoration-core')
    implementation project(':adoration-application:adoration-webapp')
}

tasks.named('jar') {
    manifest {
        attributes('Main-Class': 'website.magyar.adoration.engine.AdorationApplication')
        attributes('Implementation-Title': "$componentDescription - ${rootProject.version}")
        attributes('AdorationApplication-Version': "${rootProject.version}")
    }
}

shadowJar {
        append('META-INF/spring.handlers')
        append('META-INF/spring.schemas')

        excludes = [
            'META-INF/*.SF',
            'META-INF/*.DSA',
            'META-INF/*.RSA',
            'images/',
            '*.txt',
            '*.gif',
            '*.png',
            '*.dtd',
            '*.xcf',
            'build.properties',
            'about.html']
}

jar.finalizedBy shadowJar
